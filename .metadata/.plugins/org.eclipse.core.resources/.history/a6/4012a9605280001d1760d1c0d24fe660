package assignment;
//Implimentation1 : Queue with Array

public class QueueD {

	static int arr[];
	static int size;
	static int rear = -1;

	QueueD(int n) // constructor to know array size
	{
		arr = new int[n];
		this.size = n;
	}

	public static boolean isEmpty() // to check is queue empty or full.
	{
		return rear == -1;
	}

	// enqueue O(1)

	public static void adding(int data) {
		if (rear == size - 1) {
			System.out.println("Queue is full:");
			return;
		}
		rear++;
		arr[rear] = data;
		System.out.println("New element added in queue:" + data);
	}

	// dequeue - O(n)

	public static int remove() {
		if (isEmpty()) {
			System.out.println("Queue is Empty");
			return -1;
		}
		int front = arr[0];
		for (int i = 0; i < rear; i++) {
			arr[i] = arr[i + 1];
		}
		rear--;
		return front;
	}

	// peek - O(n)

	public static int peek() {
		if (isEmpty()) {
			System.out.println("Queue is Empty");
			return -1;
		}
		return arr[0];
	}

	public static void display() {
		for (int i = 0; i < arr.length; i++) {
			System.out.println("" + arr[i]);

		}
	}
}

/*
 * public static void main(String args[]) { Queue q =new Queue(5); q.add(1);
 * q.add(2); q.add(3);
 * 
 * while(!q.isEmpty()) { System.out.println(q.peek()); q.remove(); } }
 */
