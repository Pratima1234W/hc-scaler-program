package assignment;

public class DsDemoApp {

	public static final StackD stack = new StackD(5);
	public static final QueueD q1 = new QueueD(5);
	public static final ArrayClass a1 = new ArrayClass();
	public static final SLinkList l1 = new SLinkList();

	public static void main(String args[]) {

		Menu mainMenu = new Menu("List of Data Structures Menu:");
		Menu arrayMenu = new Menu(1, "Array");
		Menu stackMenu = new Menu(2, "Stack");
		Menu queueMenu = new Menu(3, "Queue");
		Menu linkedListMenu = new Menu(4, "Linked list");

		mainMenu.addMenuItem(stackMenu);
		mainMenu.addMenuItem(queueMenu);
		mainMenu.addMenuItem(arrayMenu);
		mainMenu.addMenuItem(linkedListMenu);

		stackMenu.addMenuItem(new MenuItem(1, "PUSH"));
		stackMenu.addMenuItem(new MenuItem(2, "CHECK IS EMPTY"));
		stackMenu.addMenuItem(new MenuItem(3, "POP"));
		stackMenu.addMenuItem(new MenuItem(4, "PEAK"));

		queueMenu.addMenuItem(new MenuItem(1, "Add"));
		queueMenu.addMenuItem(new MenuItem(2, "Check the Queue, empty or not:"));
		queueMenu.addMenuItem(new MenuItem(3, "Remove"));
		queueMenu.addMenuItem(new MenuItem(4, "Peak"));

		arrayMenu.addMenuItem(new MenuItem(1, "insertion"));
		arrayMenu.addMenuItem(new MenuItem(2, "Display all Elements:"));
		arrayMenu.addMenuItem(new MenuItem(3, "deletion"));

		linkedListMenu.addMenuItem(new MenuItem(1, "insertNode"));
		linkedListMenu.addMenuItem(new MenuItem(2, "deleteNode"));

		mainMenu.display();
	}
}